{"version":3,"sources":["components/Timer.js","App.js","index.js"],"names":["Timer","state","minutes","props","sessionLength","seconds","paused","timesUp","breakLength","breakSeconds","this","setInterval","setState","clearInterval","Break","buttonClicked","beepSound","Audio","src","play","handleReset","document","title","className","onClick","setTimeout","style","border","Component","App","upFunction","e","target","value","downFunction","id","plusClicked","React","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.851aece2.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Timer extends Component {\r\n    state = {\r\n        minutes: this.props.sessionLength,\r\n        seconds: 0,\r\n        paused: this.props.paused,\r\n\r\n        timesUp: false,\r\n        breakLength: this.props.breakLength, // breakLength is equal to breakMinute\r\n        breakSeconds: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.Timer = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n            if (this.state.paused === false) {\r\n\r\n                if (seconds > 0) {\r\n                    this.setState(({ seconds }) => ({\r\n                        seconds: seconds - 1\r\n                    }))\r\n                }\r\n\r\n\r\n                if (seconds === 0) {\r\n                    if (minutes === 0) {\r\n                        clearInterval(this.Timer)\r\n                    } else {\r\n                        this.setState(({ minutes }) => ({\r\n                            minutes: minutes - 1,\r\n                            seconds: 59\r\n                        }))\r\n                    }\r\n                }\r\n            }\r\n        }, 1000)\r\n\r\n        this.Break = setInterval(() => {\r\n            const { seconds, minutes, breakLength, breakSeconds } = this.state\r\n            if (minutes === 0 && seconds === 0) {\r\n\r\n                if (this.state.paused === false) {\r\n\r\n                    if (breakSeconds > 0) {\r\n                        this.setState(({ breakSeconds }) => ({\r\n                            breakSeconds: breakSeconds - 1\r\n                        }))\r\n                    }\r\n\r\n\r\n                    if (breakSeconds === 0) {\r\n                        if (breakLength === 0) {\r\n                            clearInterval(this.Timer)\r\n                        } else {\r\n                            this.setState(({ breakLength }) => ({\r\n                                breakLength: breakLength - 1,\r\n                                breakSeconds: 59\r\n                            }))\r\n                        }\r\n                    }\r\n\r\n                } // if this state paused === false end\r\n            }\r\n\r\n\r\n        }, 1000)\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     clearInterval(this.Timer)\r\n    //     clearInterval(this.Break)\r\n    // }\r\n\r\n    handleReset() {\r\n        this.setState({\r\n            minutes: this.props.sessionLength,\r\n            seconds: 0,\r\n            paused: this.props.paused,\r\n    \r\n            breakLength: this.props.breakLength, // breakLength is equal to breakMinute\r\n            breakSeconds: 0,\r\n\r\n            buttonClicked: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let beepSound = new Audio()\r\n        beepSound.src = 'https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav'\r\n        const { minutes, seconds, paused } = this.state\r\n\r\n        if (seconds === 0 && minutes === 0 && this.state.breakLength === 0 && this.state.breakSeconds === 0) {\r\n            beepSound.play()\r\n            this.handleReset()\r\n            this.setState({ paused: false })\r\n        }\r\n\r\n        if(paused === false) {\r\n            document.title = `Work time: (${minutes}:${seconds})`\r\n            if(this.state.minutes === 0 && this.state.seconds === 0) {\r\n                document.title = `Break time: (${this.state.breakLength}:${this.state.breakSeconds})`\r\n            }\r\n        }else {\r\n            document.title = `Pomodoro Timer`\r\n        }\r\n\r\n        return (\r\n            <div> <br />\r\n                <button className=\"session-btn session-length-btn\" onClick={() => {\r\n                    this.setState({\r\n                        minutes: this.props.sessionLength,\r\n                        seconds: 0,\r\n                        paused: this.props.paused\r\n                    })\r\n                }}>Set Session Length</button>\r\n\r\n                <button className=\"session-length-btn\" onClick={() => {\r\n                    this.setState({ buttonClicked: true })\r\n                    setTimeout(() => { this.setState({ buttonClicked: false }) }, 1000)\r\n                    this.setState({\r\n                        breakLength: this.props.breakLength\r\n                    })\r\n                }}>Set Break Length</button>\r\n\r\n                { minutes === 0 && seconds === 0\r\n                    ? <div style={\r\n                        this.state.paused === true? {} : {border: '5px solid #ff7f7f'} \r\n                    } className=\"session-break-cycle\">\r\n                        <h1 className='cycle'>Break <br />\r\n                            <p className='break-timer'>\r\n                                {this.state.breakLength}:{this.state.breakSeconds < 10\r\n                                    ? `0${this.state.breakSeconds}`\r\n                                    : this.state.breakSeconds}\r\n                            </p>\r\n                        </h1>\r\n                        \r\n                        <button onClick={() => this.setState({ paused: !paused })}>Start/Stop</button>\r\n                        <button onClick={() => { this.handleReset() }}>Reset</button>\r\n                    </div>\r\n                    : <div style={\r\n                        this.state.paused === true? {} : {border: '5px solid #90ee90'} \r\n                    } className=\"session-break-cycle\">\r\n\r\n\r\n                        <h1 className='cycle'>\r\n                            Session\r\n                            <br />\r\n                            <p className=\"session-timer\"> {minutes}:{seconds < 10 ? `0${seconds}` : seconds} </p>\r\n                        </h1>\r\n\r\n                        <button onClick={() => this.setState({ paused: !paused })}>Start/Stop</button>\r\n                        <button onClick={() => this.handleReset()}>Reset</button>\r\n\r\n                    </div>\r\n                }\r\n                { this.state.buttonClicked\r\n                    ? <div style={\r\n                        this.state.paused === true? {} : {border: '5px solid #ff7f7f'} \r\n                    } className=\"session-break-cycle-buttonClicked\">\r\n                        <h1 className='cycle'>Break <br />\r\n                            <p className='break-timer'>\r\n                                {this.state.breakLength}:{this.state.breakSeconds < 10\r\n                                    ? `0${this.state.breakSeconds}`\r\n                                    : this.state.breakSeconds}\r\n                            </p>\r\n                        </h1>\r\n                    </div>\r\n                    : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer","import React from 'react'\n\n/* Importing Components */\nimport Timer from './components/Timer'\n/* Importing Components */\n\nclass App extends React.Component {\n  state = {\n    sessionLength: 25,\n    paused: true,\n\n    breakLength: 5,\n  }\n\n  upFunction = (e) => {  // If It's not break + button, change sessionLength, \n    // if it is break + button, change breakLength\n    if (e.target.value !== 'breakLength') {\n      this.setState({ sessionLength: this.state.sessionLength + 1 })\n    } else {\n      this.setState({ breakLength: this.state.breakLength + 1 })\n    }\n  }\n\n  downFunction = (e) => {\n    if (e.target.value !== 'breakLength') { // If It's not break - button, change sessionLength, \n      // if it is break - button, change breakLength\n      this.state.sessionLength !== 0\n        ? this.setState({ sessionLength: this.state.sessionLength - 1 })\n        : this.setState({ sessionLength: 0 })\n    } else {\n      this.state.breakLength !== 0\n        ? this.setState({ breakLength: this.state.breakLength - 1 })\n        : this.setState({ breakLength: 0 })\n    }\n  }\n\n  render() {\n    const { sessionLength, breakLength, paused } = this.state\n\n    return (\n      <div id=\"App\">\n        <div className=\"session-length\">\n          <h1>Session Length\n              <br />\n            <button onClick={this.upFunction}>+</button> {sessionLength}\n            <button className=\"minus-btn\" onClick={this.downFunction}>-</button>\n          </h1>\n        </div>\n\n        <div className=\"break-length\">\n          <h1>Break Length: <br />\n            <button value=\"breakLength\" onClick={this.upFunction}>+</button> {breakLength}\n            <button className=\"minus-btn\" value=\"breakLength\" onClick={this.downFunction}>-</button>\n          </h1>\n        </div>\n\n        <Timer plusClicked={this.state.plusClicked} paused={paused} sessionLength={sessionLength} breakLength={breakLength} />\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}