{"version":3,"sources":["functions/useInterval.js","components/Timer/Timer.js","icons/arrow-down.svg","components/Timer/Controllers.js","icons/trash-bin.svg","icons/check.svg","icons/delete.svg","icons/undo.svg","components/Tasks/Tasks.js","components/Clock.js","App.js","index.js"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","Timer","seconds","setSeconds","cycle","setCycle","initialState","active","setActive","workTime","setWorkTime","breakTime","setBreakTime","prevValue","startPause","onClick","Controllers","setInitialState","clicked","setClicked","plusTime","e","target","minusTime","handleCycleSwitch","className","style","color","alt","src","arrowDown","transform","Tasks","todos","setTodos","setCurrentId","useState","userInput","setUserInput","setId","backupTodos","setBackupTodos","onSubmit","preventDefault","length","setTimeout","content","done","title","cursor","tasks","trashBin","undoIcon","onChange","value","type","map","todo","textDecoration","remove","filter","deleteTodo","deleteIcon","updatedTodos","completeTodo","checkIcon","opacity","zoom","console","log","newTodos","currentTodo","Clock","currentId","document","href","App","Fragment","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3dbfa668.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react'\r\n\r\nexport default function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n\r\n    // Remember the latest function\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    // Set Interval\r\n    useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n        }\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n        }\r\n    }, [delay]);\r\n}","// React + Hooks Import\r\nimport React from 'react'\r\n\r\n// Import custom hook\r\nimport useInterval from '../../functions/useInterval'\r\n\r\nconst Timer = (\r\n    { seconds, setSeconds,\r\n        cycle, setCycle,\r\n        initialState,\r\n        active, setActive,\r\n        workTime, setWorkTime,\r\n        breakTime, setBreakTime }) => {\r\n\r\n    useInterval(() => {\r\n        if (cycle === 'work') {\r\n            if (seconds === 0 && workTime > 0) {\r\n                setSeconds(59)\r\n                setWorkTime(prevValue => prevValue - 1)\r\n            } else if (seconds > 0) {\r\n                setSeconds(prevValue => prevValue - 1)\r\n            }\r\n\r\n            if (seconds === 0 && workTime === 0) {\r\n                setCycle('break')\r\n            }\r\n        }\r\n    }, active ? 1000 : null) // If Work...\r\n\r\n    useInterval(() => {\r\n        if (cycle === 'break') {\r\n            if (seconds === 0 && breakTime > 0) {\r\n                setSeconds(59)\r\n                setBreakTime(prevValue => prevValue - 1)\r\n            } else if (seconds > 0) {\r\n                setSeconds(prevValue => prevValue - 1)\r\n            }\r\n\r\n            if (seconds === 0 && breakTime === 0) {\r\n                setCycle('work')\r\n                setWorkTime(initialState.workTime)\r\n                setBreakTime(initialState.breakTime)\r\n            }\r\n        }\r\n    }, active ? 1000 : null) // If Break...\r\n\r\n    const startPause = () => {\r\n        setActive(!active)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <span onClick={startPause} id=\"clock\">\r\n                {cycle === 'work'\r\n                    ? `${workTime}:${seconds < 10\r\n                        ? `0${seconds}`\r\n                        : seconds}`\r\n                    : cycle === 'break'\r\n                        ? `${breakTime}:${seconds < 10\r\n                            ? `0${seconds}`\r\n                            : seconds}`\r\n                        : null}\r\n            </span>\r\n\r\n\r\n            <br />\r\n\r\n            <span id=\"start-pause\" onClick={startPause}>{active ? 'Pause' : 'Start'}</span>\r\n\r\n            {/* Tracking Cycle */}\r\n            {/* cycle: {cycle} */}\r\n            {/* Tracking Cycle */}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Timer ","export default __webpack_public_path__ + \"static/media/arrow-down.d19ce8f8.svg\";","import React from 'react'\r\n\r\nimport arrowDown from '../../icons/arrow-down.svg'\r\n\r\nconst Controllers = (\r\n    { initialState, setInitialState,\r\n         workTime, setWorkTime,\r\n          breakTime, setBreakTime,\r\n           active, setActive,\r\n            cycle, setCycle,\r\n             clicked, setClicked,\r\n              setSeconds}) => {\r\n\r\n    const plusTime = e => {\r\n        if (e.target.id === 'work') {\r\n            if(cycle === 'work') setSeconds(0)\r\n\r\n            if(workTime === initialState.workTime) {\r\n                setWorkTime(prevValue => prevValue + 1)\r\n                setInitialState({...initialState, workTime: initialState.workTime + 1})\r\n            }\r\n            else if(workTime !== initialState.workTime){\r\n                setInitialState({...initialState, workTime: workTime})\r\n            }\r\n\r\n        } else if (e.target.id === 'break') {\r\n            if (cycle === 'break') setSeconds(0)\r\n\r\n            if(breakTime === initialState.breakTime) {\r\n                setBreakTime(prevValue => prevValue + 1)\r\n                setInitialState({...initialState, breakTime: initialState.breakTime + 1})\r\n            }\r\n            else if(breakTime !== initialState.breakTime){\r\n                setInitialState({...initialState, breakTime: breakTime})\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const minusTime = e => {\r\n        if (e.target.id === 'work') {\r\n            if (workTime > 0) {\r\n                if(cycle === 'work') setSeconds(0)\r\n\r\n                if(workTime === initialState.workTime) {\r\n                    setWorkTime(prevValue => prevValue - 1)\r\n                    setInitialState({...initialState, workTime: initialState.workTime - 1})\r\n                }\r\n                else if(workTime !== initialState.workTime){\r\n                    setInitialState({...initialState, workTime: workTime})\r\n                }\r\n\r\n            }\r\n        } else if (e.target.id === 'break') {\r\n            if (breakTime > 0) {\r\n                if (cycle === 'break') setSeconds(0)\r\n\r\n                if(breakTime === initialState.breakTime) {\r\n                    setBreakTime(prevValue => prevValue - 1)\r\n                    setInitialState({...initialState, breakTime: initialState.breakTime - 1})\r\n                }\r\n                else if(breakTime !== initialState.breakTime){\r\n                    setInitialState({...initialState, breakTime: breakTime})\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCycleSwitch = e => {\r\n        if (e.target.id === 'work-time') {\r\n            setClicked({...clicked, workTime: true, breakTime: false })\r\n            setCycle('work')\r\n            setSeconds(0)\r\n            setActive(false)\r\n        } else if (e.target.id === 'break-time') {\r\n            setClicked({...clicked, workTime: false, breakTime: true })\r\n            setCycle('break')\r\n            setSeconds(0)\r\n            setActive(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <span className=\"controllers\">\r\n            <br /> <br />\r\n\r\n            <span className=\"work-time\"><span style={\r\n                cycle === 'work' ? { color: '#3C91E6' } : {}\r\n            } id=\"work-time\" onClick={handleCycleSwitch}> Work Time</span>\r\n                <br />\r\n                <img alt=\"arrow-down\" src={arrowDown} id=\"work\" onClick={active ? null : minusTime} ></img>\r\n                <span className=\"controller\">{initialState.workTime}</span>\r\n                <img alt=\"arrow-up\" style={{ transform: 'rotate(-90deg)' }} src={arrowDown} id=\"work\" onClick={active ? null : plusTime}></img>\r\n            </span>\r\n\r\n            <br />\r\n\r\n            <span className=\"break-time\"><span style={\r\n                cycle === 'break' ? { color: '#FA824C' } : {}\r\n            } id=\"break-time\" onClick={handleCycleSwitch}> Break Time</span>\r\n                <br />\r\n\r\n                <img alt=\"arrow-down\" src={arrowDown} id=\"break\" onClick={active ? null : minusTime} ></img>\r\n                <span className=\"controller\">{initialState.breakTime}</span>\r\n                <img alt=\"arrow-up\" style={{ transform: 'rotate(-90deg)' }} src={arrowDown} id=\"break\" onClick={active ? null : plusTime}></img>\r\n            </span>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Controllers","export default __webpack_public_path__ + \"static/media/trash-bin.72382142.svg\";","export default __webpack_public_path__ + \"static/media/check.d4025a5b.svg\";","export default __webpack_public_path__ + \"static/media/delete.071b5660.svg\";","export default __webpack_public_path__ + \"static/media/undo.398153bb.svg\";","import React, { useState } from 'react'\r\n\r\n// Import Icons\r\nimport trashBin from '../../icons/trash-bin.svg'\r\nimport checkIcon from '../../icons/check.svg'\r\nimport deleteIcon from '../../icons/delete.svg'\r\nimport undoIcon from '../../icons/undo.svg'\r\n\r\nconst Tasks = (\r\n        { clicked, setClicked,\r\n             todos, setTodos,\r\n                setCurrentId }\r\n) => {\r\n    const [userInput, setUserInput] = useState('')\r\n    const [id, setId] = useState(1)\r\n\r\n    const [backupTodos, setBackupTodos] = useState(todos)\r\n\r\n    const clearTodos = () => {\r\n        setBackupTodos(todos)\r\n        setTodos([])\r\n        setId(0)\r\n    }\r\n\r\n    const undoTodos = () => {\r\n        setTodos(backupTodos)\r\n    }\r\n\r\n    const completeTodo = (id) => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.done = !todo.done\r\n            }\r\n            return todo\r\n        })\r\n\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n    const deleteTodo = (id) => {\r\n        const remove = [...todos].filter(todo => todo.id !== id)\r\n\r\n        setTodos(remove)\r\n    }\r\n\r\n    const currentTodo = (id, current) => {\r\n        console.log(id)\r\n        let newTodos = todos.map(todo => {\r\n            todo.current = false\r\n            return todo\r\n        }) // First, marking all of the current values - False\r\n        newTodos[id].current = true // Then marking current value as - True\r\n\r\n        if(todos[id].current === current) {\r\n            newTodos[id].current = !newTodos[id].current\r\n        }\r\n\r\n        let updatedTodos = [...newTodos]\r\n        setTodos(updatedTodos)\r\n\r\n        setCurrentId(id)\r\n    }\r\n\r\n    const addTodo = e => {\r\n        e.preventDefault()\r\n\r\n        if (userInput.length > 35) {\r\n            setUserInput(`Task Is Too Long`)\r\n            setTimeout(() => {\r\n                setUserInput('')\r\n            }, 1000)\r\n        }\r\n        else {\r\n            setUserInput('')\r\n            setId(id + 1)\r\n\r\n            setTodos([\r\n                ...todos,\r\n                {\r\n                    content: userInput,\r\n                    done: false,\r\n                    current: false,\r\n                    id: id,\r\n                },\r\n            ])\r\n        }\r\n    }\r\n\r\n    const hideUnhideTasks = () => {\r\n        setClicked({ ...clicked, tasks: !clicked.tasks })\r\n    }\r\n\r\n\r\n    return (\r\n        <form id=\"tasks\" onSubmit={addTodo}>\r\n            <span title=\"Hide/Unhide Tasks\" style={{ cursor: 'pointer' }} onClick={hideUnhideTasks}>\r\n                Tasks\r\n            </span>\r\n            <img alt=\"clear-tasks\" title=\"Clear Tasks\" id=\"trash-bin\" src={trashBin} onClick={clearTodos} />\r\n            <img alt=\"undo-tasks\" title=\"Undo Tasks\" id=\"undo-icon\" onClick={undoTodos} src={undoIcon} />\r\n            <br />\r\n            <input className=\"input-text\" onChange={e => setUserInput(e.target.value)} type=\"text\" value={userInput} />\r\n\r\n            {clicked.tasks === true ?\r\n                <>\r\n                    {todos.map(todo => {\r\n                        return (\r\n                            <ul key={todo.id} id=\"todos\">\r\n                                <li id=\"todo\" style={\r\n                                    todo.done ? { textDecoration: 'line-through' }\r\n                                        : { textDecoration: 'none' }\r\n                                }>\r\n                                    <img alt=\"delete-icon\" id=\"delete-icon\" onClick={() => deleteTodo(todo.id)} src={deleteIcon} />\r\n                                    <img alt=\"check-icon\" id=\"check-icon\" onClick={() => completeTodo(todo.id)} src={checkIcon} />\r\n                                    {todo.content}\r\n                                </li>\r\n                                <span id=\"current\" style={\r\n                                    todo.current && !todo.done ? { opacity: '1', zoom: '105%' } : { opacity: '0.5' }\r\n                                } onClick={!todo.done ? () => currentTodo(todo.id, todo.current) : null}>\r\n                                    Current\r\n                                </span>\r\n                            </ul>\r\n                        )\r\n                    })}\r\n                </>\r\n                : null}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Tasks","import React, { useState, useEffect } from 'react'\r\n\r\n// Import Components\r\n    // Timer\r\n        import Timer from './Timer/Timer'\r\n        import Controllers from './Timer/Controllers'\r\n    // Tasks\r\n        import Tasks from './Tasks/Tasks'\r\n\r\nconst Clock = () => {\r\n    const [todos, setTodos] = useState([\r\n        {\r\n            content: 'Start The Timer',\r\n            done: false,\r\n            current: false,\r\n            id: 0,\r\n        },\r\n    ])\r\n    const [currentId, setCurrentId] = useState(null) // Which id is current todo? - Used for displaying -\r\n    // - Time To Work ( On Current Task (if any) ) \r\n\r\n\r\n    const [initialState, setInitialState] = useState({\r\n        workTime: 25,\r\n        breakTime: 5\r\n    })\r\n\r\n    const [clicked, setClicked] = useState({\r\n        workTime: true,\r\n        breakTime: false,\r\n\r\n        tasks: true,\r\n    })\r\n\r\n\r\n    const [workTime, setWorkTime] = useState(initialState.workTime)\r\n    const [breakTime, setBreakTime] = useState(initialState.breakTime)\r\n    const [seconds, setSeconds] = useState(0)\r\n\r\n    const [active, setActive] = useState(false) // Is active?\r\n\r\n    const [cycle, setCycle] = useState('work') // Which Cycle?\r\n\r\n\r\n    const reset = () => {\r\n        setActive(false)\r\n\r\n        setSeconds(0)\r\n        setInitialState({\r\n            workTime: 25,\r\n            breakTime: 5\r\n        })\r\n        setWorkTime(initialState.workTime)\r\n        setBreakTime(initialState.breakTime)\r\n\r\n        setCycle('work')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (active) {\r\n            document.title = `Time To ${cycle === 'work' ? `Work` : `Break`}! ${cycle === 'work' ? workTime : breakTime}:${seconds < 10 ? `0${seconds}` : seconds}`\r\n        } else {\r\n            document.title = `Pomodoro Timer`\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [seconds])\r\n\r\n    return (\r\n        <>\r\n            <div id=\"container\">\r\n                <p id=\"time-to\">Time To {cycle === 'work' ? `Work${todos[currentId] ? todos[currentId].done === false ? todos[currentId].current ? ` On ${todos[currentId].content === '' ? 'White Space' : todos[currentId].content}` : '' : '' : ''}` : 'Break'}!</p>\r\n\r\n                <Timer\r\n                    seconds={seconds} setSeconds={setSeconds}\r\n                        cycle={cycle} setCycle={setCycle}\r\n                            workTime={workTime} setWorkTime={setWorkTime}\r\n                                breakTime={breakTime} setBreakTime={setBreakTime}\r\n                                    initialState={initialState}\r\n                                        active={active} setActive={setActive}\r\n                                            clicked={clicked}\r\n                />\r\n\r\n                <br />\r\n\r\n                <a href=\"/pomodoro-timer\"><p id=\"pomodoro-watermark\">Pomodoro Timer</p></a>\r\n\r\n                <br />\r\n\r\n                <span id=\"reset\" onClick={reset}>Reset</span>\r\n\r\n                <Controllers\r\n                    initialState={initialState} setInitialState={setInitialState}\r\n                        workTime={workTime} setWorkTime={setWorkTime}\r\n                            breakTime={breakTime} setBreakTime={setBreakTime}\r\n                                active={active}\r\n                                    cycle={cycle} setCycle={setCycle} \r\n                                        clicked={clicked} setClicked={setClicked}\r\n                                            seconds={seconds} setSeconds={setSeconds}\r\n                                                setActive={setActive}\r\n                />\r\n\r\n            </div>\r\n            <span id=\"tasks-container\">\r\n                <Tasks clicked={clicked} setClicked={setClicked}\r\n                       todos={todos} setTodos={setTodos}\r\n                       currentId={currentId} setCurrentId={setCurrentId}\r\n                />\r\n            </span>\r\n\r\n            <p id=\"margin-bottom\">margin</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Clock","import React from 'react'\r\nimport Clock from './components/Clock'\r\n\r\nconst App = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Clock />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />,document.getElementById('root'))"],"sourceRoot":""}